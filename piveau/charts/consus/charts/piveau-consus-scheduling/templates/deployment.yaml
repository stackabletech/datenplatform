{{- $fullName := include "piveau-consus-scheduling.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "piveau-consus-scheduling.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "piveau-consus-scheduling.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "piveau-consus-scheduling.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $fullName }}
          image: {{ printf "%s:%s" .Values.image .Values.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - containerPort: 8080
              name: default
          startupProbe:
            httpGet:
              path: /health
              port: default
            initialDelaySeconds: 10
            failureThreshold: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: default
            failureThreshold: 1
            periodSeconds: 10
          {{- if .Values.resources }}
          resources: {{ toYaml .Values.resources | nindent 12 }}
          {{- end }}
          env:
            - name: JAVA_OPTS
              value: -XX:+ExitOnOutOfMemoryError {{ .Values.javaOpts }}
            - name: PIVEAU_CLUSTER_CONFIG
              value: |-
                {
                {{- if .Values.serviceDiscovery }}
                  "serviceDiscovery": {
                    {{- $last := sub (len .Values.serviceDiscovery) 1 }}
                    {{- range $index, $service := .Values.serviceDiscovery }}
                    {{ $service | quote }}: {
                      "endpoints": {
                        "http": {
                          "address": {{ printf "http://%s-%s:8080/pipe" $.Release.Name . | quote }}
                        }
                      }
                    }{{ if ne $index $last }},{{ end }}
                    {{- end }}
                  }
                {{- end }}
                }
            {{- if .Values.extraEnvs }}
            {{- toYaml .Values.extraEnvs | nindent 12 }}
            {{- end }}
      {{- if .Values.persistence.enabled }}
          volumeMounts:
            - mountPath: /db
              name: scheduling-data
      volumes:
        - name: scheduling-data
          persistentVolumeClaim:
            claimName: {{ $fullName }}
      {{- end }}